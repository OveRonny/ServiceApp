@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject ServiceApp.UI.Services.IAuthService Auth
@inject AuthenticationStateProvider AuthStateProvider

<nav class="navbar navbar-expand-lg navbar-glass" data-bs-theme="dark">
    <div class="container-fluid">
        <a class="navbar-brand d-flex align-items-center" href="/">
            <img src="images/progorb-mark.svg" alt="" height="28" class="me-2" />
            <span class="brand-gradient">Progorb</span>
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto">
                <li class="nav-item"><a class="nav-link" href="/owners">Eiere</a></li>
                <li class="nav-item"><a class="nav-link" href="/vehicles">Kjøretøyer</a></li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="setupDropdown" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">Oppsett</a>
                    <ul class="dropdown-menu" aria-labelledby="setupDropdown">
                        <li><a class="dropdown-item" href="/servicetypes">Service typer</a></li>
                        <li><a class="dropdown-item" href="/suppliers">Leverandører</a></li>
                        <li><a class="dropdown-item" href="/servicecompanies">Firma</a></li>
						<li><a class="dropdown-item" href="/createuser">Ny bruker</a></li>
                    </ul>
                </li>
            </ul>

            <AuthorizeView>
                <Authorized>
                    <form class="d-flex" onsubmit="return false;">
                        <span class="nav-link text-secondary me-2">@GetDisplayName(context.User)</span>
                        <button type="button" class="btn btn-outline-light btn-sm" @onclick="Logout">Logg ut</button>
                    </form>
                </Authorized>
                <NotAuthorized>
                    <div class="d-flex gap-2">                        
                        <a class="btn btn-primary btn-sm" href="/login">Logg inn</a>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>
</nav>

@code {
    private async Task Logout()
    {
        await Auth.LogoutAsync();
        if (AuthStateProvider is ServiceApp.UI.Services.JwtAuthenticationStateProvider jwt)
            jwt.NotifyUserLogout();
    }

    private static string GetDisplayName(ClaimsPrincipal user)
    {
        // Prefer proper first-name claims if present
        var first = user.FindFirst("given_name")?.Value
                    ?? user.FindFirst(ClaimTypes.GivenName)?.Value;
        if (!string.IsNullOrWhiteSpace(first))
            return first;

        // Fallback to name/email or ClaimTypes.Name
        var email = user.FindFirst("email")?.Value;
        var name = user.FindFirst("name")?.Value ?? user.Identity?.Name;

        var source = !string.IsNullOrWhiteSpace(first) ? first
                    : !string.IsNullOrWhiteSpace(name) ? name
                    : email;

        if (!string.IsNullOrWhiteSpace(source))
        {
            var at = source.IndexOf('@');
            return at > 0 ? source[..at] : source;
        }

        return "Logget inn";
    }
}