@page "/confirm-email"
@using System.Net.Http.Json
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Nav

<h3>Bekrefter e-post</h3>

@if (!string.IsNullOrEmpty(_message))
{
    <div class="alert @(_ok ? "alert-success" : "alert-danger")">@_message</div>
    <div class="mt-3">
        <a class="btn btn-primary" href="/login">Gå til innlogging</a>
        <a class="btn btn-secondary ms-2" href="/">Hjem</a>
    </div>
}

@code {
    [SupplyParameterFromQuery] public string? UserId { get; set; }
    [SupplyParameterFromQuery] public string? Code { get; set; }

    private string? _message;
    private bool _ok;

    protected override async Task OnParametersSetAsync()
    {
        if (string.IsNullOrWhiteSpace(UserId) || string.IsNullOrWhiteSpace(Code))
        {
            _ok = false;
            _message = "Ugyldig bekreftelseslenke.";
            return;
        }

        try
        {
            var http = HttpClientFactory.CreateClient("Api"); // BaseAddress = https://localhost:7119/
            var resp = await http.PostAsJsonAsync("api/auth/confirm-email", new { UserId, Code });

            if (resp.IsSuccessStatusCode)
            {
                _ok = true;
                _message = "E-post bekreftet! Du kan nå logge inn.";
            }
            else
            {
                var error = await resp.Content.ReadAsStringAsync();
                _ok = false;
                _message = string.IsNullOrWhiteSpace(error) ? "Kunne ikke bekrefte e-post." : error;
            }
        }
        catch
        {
            _ok = false;
            _message = "En feil oppstod under bekreftelse.";
        }
    }
}