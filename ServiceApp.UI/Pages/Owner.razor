@page "/owner"
@page "/owner/{id:int}"
@inject IOwnerService ownerService
@inject NavigationManager navigationManager


<div class="container-xxl">
    <h3>Eiere</h3>

    <div class="col-12 col-md-6">

        <EditForm Model="ownerModel" OnValidSubmit="HandleValidSubmit">  
            <DataAnnotationsValidator />

            <div class="mb-3">
                <label for="firstName" class="form-label">First Name</label>
                <InputText id="firstName" class="form-control" @bind-Value="ownerModel.FirstName" />
                <ValidationMessage For="@(() => ownerModel.FirstName)" />

            </div>
            <div class="mb-3">
                <label for="lastName" class="form-label">Last Name</label>
                <InputText id="lastName" class="form-control" @bind-Value="ownerModel.LastName" />
                <ValidationMessage For="@(() => ownerModel.LastName)" />
            </div>
            <div class="mb-3">
                <label for="address" class="form-label">Address</label>
                <InputText id="address" class="form-control" @bind-Value="ownerModel.Address" />
                <ValidationMessage For="@(() => ownerModel.Address)" />
            </div>

            <div class="mb-3">
                <label for="phoneNumber" class="form-label">Phone Number</label>
                <InputText id="phoneNumber" class="form-control" @bind-Value="ownerModel.PhoneNumber" />
                <ValidationMessage For="@(() => ownerModel.PhoneNumber)" />
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <InputText id="email" class="form-control" @bind-Value="ownerModel.Email" />
                <ValidationMessage For="@(() => ownerModel.Email)" />
            </div>
            <div class="mb-3">
                <label for="PostalCode" class="form-label">PostalCode</label>
                <InputText id="PostalCode" class="form-control" @bind-Value="ownerModel.PostalCode" />
                <ValidationMessage For="@(() => ownerModel.PostalCode)" />
            </div>
            <div class="mb-3">
                <label for="City" class="form-label">City</label>
                <InputText id="City" class="form-control" @bind-Value="ownerModel.City" />
                <ValidationMessage For="@(() => ownerModel.City)" />
            </div>

            <button type="submit" class="btn btn-primary">Save</button>
            <button type="button" class="btn btn-secondary" @onclick=(NavigateToOwners)>Cancel</button>
            <button type="button" class="btn btn-danger" @onclick=(DeleteOwner)>Slett</button>

        </EditForm>
    </div>
</div>

@code {
    private OwnerModel ownerModel = new OwnerModel();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {        
        if(Id > 0)
        {
            var result = await ownerService.GetOwnerByIdAsync(Id);
            if (result != null)
            {
                ownerModel = result;
            }         
        }
        else
        {
            ownerModel = new OwnerModel();
        }      
        
    }

    private async Task HandleValidSubmit()
    {
        if (Id > 0)
        {
            await ownerService.UpdateOwnerAsync(ownerModel);
        }
        else
        {
            await ownerService.AddOwnerAsync(ownerModel);
        }
        
        NavigateToOwners();
    }

    private void NavigateToOwners()
    {
        navigationManager.NavigateTo("/owners");
    }

    private async Task DeleteOwner()
    {
        if (Id > 0)
        {
            await ownerService.DeleteOwnerAsync(Id);
            NavigateToOwners();
        }
    }

   
   
}
