@page "/register"
@inject IAuthService Auth
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Nav

<h3>Registrer bruker</h3>

<EditForm Model="@model" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label class="form-label">E-post</label>
        <InputText class="form-control" @bind-Value="model.Email" />
    </div>
    <div class="mb-3">
        <label class="form-label">Passord</label>
        <InputText class="form-control" @bind-Value="model.Password" type="password" />
    </div>
    <div class="mb-3">
        <label class="form-label">Bekreft passord</label>
        <InputText class="form-control" @bind-Value="model.ConfirmPassword" type="password" />
    </div>
    <button class="btn btn-primary" type="submit">Registrer</button>
    @if (!string.IsNullOrEmpty(error))
    {
        <div class="alert alert-danger mt-3">@error</div>
    }
    @if (!string.IsNullOrEmpty(info))
    {
        <div class="alert alert-info mt-3">@info</div>
    }
</EditForm>

@code {
    private RegisterModel model = new();   
    private string error = string.Empty;
    private string info = string.Empty;

    private async Task Submit()
    {
        error = string.Empty;
        info = string.Empty;
        var registered = await Auth.RegisterAsync(model.Email, model.Password);
        if (registered)
        {
            info = "Registrering vellykket. Sjekk e-posten din for å bekrefte kontoen før du logger inn.";
            Nav.NavigateTo("/login");
        }
        else
        {
            error = "Registrering feilet.";
        }
    }
}